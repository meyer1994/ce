
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "comandoleft&|^left+-left*/%rightUMINUSNUM\n    comando : operacao\n    \n    operacao : operacao '*' operacao\n             | operacao '/' operacao\n             | operacao '%' operacao\n             | operacao '+' operacao\n             | operacao '-' operacao\n             | operacao '&' operacao\n             | operacao '^' operacao\n             | operacao '|' operacao\n    \n    operacao : '-' operacao %prec UMINUS\n    \n    operacao : NUM\n    "
    
_lr_action_items = {'-':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[3,9,3,-11,3,3,3,3,3,3,3,3,-10,-2,-3,-4,-5,-6,9,9,9,]),'NUM':([0,3,5,6,7,8,9,10,11,12,],[4,4,4,4,4,4,4,4,4,4,]),'$end':([1,2,4,13,14,15,16,17,18,19,20,21,],[0,-1,-11,-10,-2,-3,-4,-5,-6,-7,-8,-9,]),'*':([2,4,13,14,15,16,17,18,19,20,21,],[5,-11,-10,-2,-3,-4,5,5,5,5,5,]),'/':([2,4,13,14,15,16,17,18,19,20,21,],[6,-11,-10,-2,-3,-4,6,6,6,6,6,]),'%':([2,4,13,14,15,16,17,18,19,20,21,],[7,-11,-10,-2,-3,-4,7,7,7,7,7,]),'+':([2,4,13,14,15,16,17,18,19,20,21,],[8,-11,-10,-2,-3,-4,-5,-6,8,8,8,]),'&':([2,4,13,14,15,16,17,18,19,20,21,],[10,-11,-10,-2,-3,-4,-5,-6,-7,-8,-9,]),'^':([2,4,13,14,15,16,17,18,19,20,21,],[11,-11,-10,-2,-3,-4,-5,-6,-7,-8,-9,]),'|':([2,4,13,14,15,16,17,18,19,20,21,],[12,-11,-10,-2,-3,-4,-5,-6,-7,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comando':([0,],[1,]),'operacao':([0,3,5,6,7,8,9,10,11,12,],[2,13,14,15,16,17,18,19,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> comando","S'",1,None,None,None),
  ('comando -> operacao','comando',1,'p_comando','grammar.py',19),
  ('operacao -> operacao * operacao','operacao',3,'p_operacao','grammar.py',25),
  ('operacao -> operacao / operacao','operacao',3,'p_operacao','grammar.py',26),
  ('operacao -> operacao % operacao','operacao',3,'p_operacao','grammar.py',27),
  ('operacao -> operacao + operacao','operacao',3,'p_operacao','grammar.py',28),
  ('operacao -> operacao - operacao','operacao',3,'p_operacao','grammar.py',29),
  ('operacao -> operacao & operacao','operacao',3,'p_operacao','grammar.py',30),
  ('operacao -> operacao ^ operacao','operacao',3,'p_operacao','grammar.py',31),
  ('operacao -> operacao | operacao','operacao',3,'p_operacao','grammar.py',32),
  ('operacao -> - operacao','operacao',2,'p_operacao_minus','grammar.py',52),
  ('operacao -> NUM','operacao',1,'p_operacao_literal','grammar.py',58),
]
